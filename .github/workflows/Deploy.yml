name: Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  # build-and-store:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: docker/setup-buildx-action@v1
  #     - name: Docker Hub Login
  #       run: docker login -u 0028101996 -p ${{ secrets.DOCKERHUB_PASS }}
  #     - name: Build image
  #       run: docker build -t 0028101996/app-security .
  #     - name: Push image
  #       run: docker push 0028101996/app-security

#   Deploy-Preview:
#     runs-on: ubuntu-latest
# #    needs: build-and-store
#     steps:
#       - uses: actions/checkout@v4
#       - name: Install Vercel CLI
#         run: npm install --global vercel@latest
#       - name: Configure Git for HTTPS
#         run: git config --global url."https://".insteadOf ssh://
#       - name: Pull Vercel Environment Information
#         run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
#       - name: Build Project Artifacts DockerPull
#         run: docker pull 0028101996/app-security:latest
#       - name: Build Project Artifacts DockerRun
#         run: docker run -p 80:80 0028101996/app-security:latest node --inspect
#       - name: Deploy Project Artifacts to Vercel
#         run: vercel deploy --token=${{ secrets.VERCEL_TOKEN }} --prod --local-config=./vercel.json
#       # - name: Alias
#       #   run: vercel alias app-security test-app --token=${{ secrets.VERCEL_TOKEN }}

  Deploy-Preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy to Vercel
        run: vercel deploy --token=${{ secrets.VERCEL_TOKEN }} --image https://hub.docker.com/r/0028101996/app-security --port 8080

  # Deploy-Preview:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Install Vercel CLI
  #       run: npm install --global vercel@latest
  #     - name: Pull Vercel Environment Information
  #       run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
  #     - name: Deploy to Vercel
  #       run: vercel --prod --token=${{ secrets.VERCEL_TOKEN }} --build-env DOCKER_IMAGE=0028101996/app-security:latest
      # - name: Alias
      #   run: vercel alias app-security test-app --token=${{ secrets.VERCEL_TOKEN }}


  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: vercel/ncc@2.0.0
  #       with:
  #         vercel-token: ${{ secrets.VERCEL_TOKEN }}
  #         project-name: your-project-name

    # runs-on: ubuntu-latest
    # needs: build
    # steps:
    #   - uses: actions/checkout@v2

    #   - name: Login to Vercel
    #     run: |
    #       echo "${{ secrets.VERCEL_TOKEN }}" | docker login vercel -u ${{ secrets.VERCEL_USERNAME }} --password-stdin

      # - name: Push image to Vercel
      #   run: docker push vercel/my-app

      # - name: Upload to S3
      #   run: |
      #     docker run --rm -it -v $(pwd):/app -w /app lambci/lambda:build-python3.8 pip install awscli
      #     aws s3 cp ./my-app.zip s3://security-app-mai